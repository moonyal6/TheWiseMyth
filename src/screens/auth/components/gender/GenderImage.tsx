import React, { useState, useEffect } from "react";
import { View, Animated } from "react-native";
import Svg, { Path } from "react-native-svg";
import { COLORS } from "../../../../constants/theme";
import tw from "../../../../utils/tailwind";

type Gender = "male" | "female" | null;

interface GenderImageProps {
  gender: Gender;
  isSelected: boolean;
}

const GenderImage: React.FC<GenderImageProps> = ({ gender, isSelected }) => {
  const animation = React.useRef(
    new Animated.Value(isSelected ? 1 : 0),
  ).current;

  React.useEffect(() => {
    Animated.spring(animation, {
      toValue: isSelected ? 1 : 0,
      friction: 8,
      tension: 100,
      useNativeDriver: true,
    }).start();
  }, [isSelected]);

  const AnimatedPath = Animated.createAnimatedComponent(Path);
  const AnimatedSvg = Animated.createAnimatedComponent(Svg);

  const mainColor = animation.interpolate({
    inputRange: [0, 1],
    outputRange: ["#BCC1CD", COLORS.primary.purple],
  }) as unknown as string;

  const accentColor = animation.interpolate({
    inputRange: [0, 1],
    outputRange: ["#9491AE", "#EF7979"],
  }) as unknown as string;

  const rotation = animation.interpolate({
    inputRange: [0, 1],
    outputRange: ["-30deg", "0deg"],
  });

  if (gender === "male") {
    return (
      <View style={tw`mb-2`}>
        <AnimatedSvg
          width={96}
          height={96}
          viewBox='0 0 143 165'
          style={{
            transform: [{ rotate: rotation }],
          }}
        >
          <AnimatedPath
            d='M40.6568 52.262C52.3079 32.0818 78.0359 25.0473 98.0117 36.5804C117.987 48.1134 124.76 73.9118 113.108 94.092C102.912 111.753 81.9287 119.348 63.4588 113.233L57.0377 124.354L67.7529 123.224L69.3638 140.061L36.25 143.555L22.7185 113.131L38.1055 106.107L42.4841 115.952L48.9053 104.83C34.3742 91.8926 30.4602 69.923 40.6568 52.262ZM98.5582 85.6913C105.529 73.6178 101.476 58.1796 89.5251 51.2796C77.5739 44.3795 62.1777 48.5891 55.2071 60.6626C48.2364 72.7361 52.289 88.1743 64.2402 95.0744C76.1914 101.974 91.5876 97.7649 98.5582 85.6913Z'
            fill={mainColor}
          />
          <AnimatedPath
            d='M82.1559 24.7504C83.0738 24.4995 84.0127 25.0415 84.251 25.96C84.5915 27.257 85.3892 28.3477 86.5048 29.0628L88.5588 25.5053C92.0422 19.4719 99.707 17.379 105.676 20.8252L107.821 22.0633C113.793 25.5114 115.808 33.1973 112.326 39.2274L110.272 42.7849C111.451 43.3901 112.793 43.539 114.086 43.1854C115.004 42.9344 115.943 43.4764 116.181 44.395C116.423 45.3154 115.875 46.2639 114.959 46.5115C112.696 47.1304 110.336 46.8284 108.313 45.6606L84.9906 32.1953C82.968 31.0275 81.5264 29.1348 80.9306 26.8651C80.689 25.9446 81.2366 24.9962 82.1526 24.7485L82.1559 24.7504Z'
            fill={accentColor}
          />
          <AnimatedPath
            d='M50.8624 100.329L55.1546 106.406C55.7714 106.19 56.4744 106.227 57.0806 106.577L57.858 107.026C58.4674 107.378 58.8501 107.963 58.9712 108.605L66.3798 109.284C67.5822 109.392 68.2572 110.718 67.6482 111.773L63.1023 119.647C62.4932 120.702 61.0073 120.78 60.3122 119.793L56.0107 113.703C55.3996 113.909 54.709 113.865 54.1094 113.519L53.332 113.07C52.7325 112.724 52.3492 112.148 52.2224 111.515L44.7967 110.836C43.5944 110.727 42.9193 109.401 43.5284 108.346L48.0743 100.472C48.6834 99.4175 50.1692 99.3391 50.8643 100.326L50.8624 100.329Z'
            fill={accentColor}
          />
          <AnimatedPath
            d='M64.8781 71.1314L69.3895 69.8979C72.4458 69.0623 75.5882 70.8011 76.5021 73.8358C79.582 73.1114 82.6643 74.962 83.4687 78.0266L84.6562 82.5503C85.4044 85.4005 88.3145 87.0851 91.1603 86.3099C86.7247 89.7702 80.3309 88.7411 77.2603 84.0708L73.7104 78.6712L67.2593 78.2967C61.6794 77.9726 57.5912 72.95 58.3702 67.3785C59.1217 70.2307 62.0357 71.9086 64.8781 71.1314Z'
            fill={mainColor}
          />
        </AnimatedSvg>
      </View>
    );
  }

  return (
    <View style={tw`mb-2`}>
      <AnimatedSvg
        width={96}
        height={96}
        viewBox='0 0 155 171'
        style={{
          transform: [{ rotate: rotation }],
        }}
      >
        <AnimatedPath
          d='M46.2071 42.2752C59.6378 19.0126 89.4874 11.0144 112.75 24.4451C136.013 37.8758 144.011 67.7254 130.58 90.988C118.826 111.347 94.4909 120.017 73.0052 112.855L65.6698 125.561L80.301 134.008L70.5181 150.952L55.8869 142.505L50.7241 151.447L33.7797 141.664L38.9425 132.722L24.3113 124.275L34.0941 107.33L48.7253 115.778L56.0608 103.072C39.1156 88.0462 34.4569 62.6361 46.2109 42.2775L46.2071 42.2752ZM113.636 81.2052C121.671 67.2875 116.885 49.4249 102.967 41.3895C89.0495 33.3542 71.1869 38.1404 63.1515 52.0581C55.1161 65.9758 59.9024 83.8384 73.8201 91.8737C87.7378 99.9091 105.6 95.1228 113.636 81.2052Z'
          fill={mainColor}
        />
        <AnimatedPath
          d='M76.5997 72.7071L78.531 72.3388C80.5926 71.9485 82.6475 73.0582 83.4437 75.0012L83.4921 75.1212L83.6202 75.1031C85.6988 74.825 87.6895 76.0459 88.3823 78.0264L89.029 79.8831C89.4928 81.2148 90.2622 82.416 91.2814 83.3881C89.5552 83.2507 87.8179 83.4958 86.196 84.099L85.8713 84.2184C84.3876 84.7683 82.7461 84.7055 81.3112 84.0459C79.7491 83.323 78.2568 82.4614 76.8497 81.47C75.5549 80.5588 74.6798 79.1687 74.4203 77.6071L74.3614 77.2662C74.0728 75.56 73.4163 73.933 72.4343 72.5067C73.788 72.8995 75.2129 72.9652 76.5959 72.7049L76.5997 72.7071Z'
          fill={mainColor}
        />
        <AnimatedPath
          d='M51.4958 104.14C53.4736 100.714 57.8568 99.5365 61.2863 101.517C63.4844 102.786 64.748 105.044 64.8583 107.405C66.956 106.314 69.5456 106.285 71.7437 107.554C75.1695 109.532 76.3472 113.915 74.3671 117.345C73.9773 118.02 73.4917 118.604 72.9401 119.099L72.9439 119.101L65.6758 125.559L48.7314 115.776L50.7103 106.182C50.7103 106.182 50.7182 106.151 50.7193 106.131L50.7272 106.1C50.8846 105.429 51.1386 104.767 51.5018 104.138L51.4958 104.14Z'
          fill={accentColor}
        />
        <AnimatedPath
          d='M66.4944 52.7708C73.8775 41.0903 89.2822 37.2123 101.355 44.1823C103.959 45.6862 106.198 47.5768 108.052 49.7422C108.052 49.7422 89.9971 67.5574 66.4982 52.773L66.4944 52.7708Z'
          fill={accentColor}
        />
      </AnimatedSvg>
    </View>
  );
};

export default GenderImage;
